// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  password    String
  name        String?
  workouts    Workout[]
  muscleGroups MuscleGroup[]
  exercises    ExerciseTemplate[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  google_id  String?  @unique
}

model Workout {
  id          Int       @id @default(autoincrement())
  date        DateTime  @default(now())
  notes       String?
  userId      Int
  user        User      @relation(fields: [userId], references: [id])
  exercises   Exercise[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model MuscleGroup {
  id          Int       @id @default(autoincrement())
  name        String
  userId      Int
  user        User      @relation(fields: [userId], references: [id])
  exercises   ExerciseTemplate[]
  isPublic    Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([name, userId])
}

model ExerciseTemplate {
  id            Int       @id @default(autoincrement())
  name          String
  muscleGroupId Int
  muscleGroup   MuscleGroup @relation(fields: [muscleGroupId], references: [id])
  userId        Int
  user          User      @relation(fields: [userId], references: [id])
  isPublic      Boolean   @default(false)
  exercises     Exercise[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@unique([name, userId])
}

model Exercise {
  id                Int       @id @default(autoincrement())
  sets              Int
  reps              Int
  weight            Float
  notes             String?
  workoutId         Int
  workout           Workout   @relation(fields: [workoutId], references: [id])
  exerciseTemplateId Int?
  exerciseTemplate   ExerciseTemplate? @relation(fields: [exerciseTemplateId], references: [id])
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}
